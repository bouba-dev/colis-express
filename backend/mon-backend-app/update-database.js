const mysql = require('mysql2/promise');
const fs = require('fs').promises;
const path = require('path');

async function updateDatabase() {
  let connection;
  
  try {
    // Configuration de la base de donn√©es
    const config = {
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || 'K@ou2021',
      database: process.env.DB_NAME || 'colis_express',
      multipleStatements: true
    };

    console.log('üîå Connexion √† la base de donn√©es...');
    connection = await mysql.createConnection(config);
    console.log('‚úÖ Connexion r√©ussie');

    // Lire le script SQL
    const sqlPath = path.join(__dirname, 'src/scripts/update_colis_table.sql');
    const sqlScript = await fs.readFile(sqlPath, 'utf8');
    
    console.log('üìù Ex√©cution du script de mise √† jour...');
    await connection.execute(sqlScript);
    console.log('‚úÖ Base de donn√©es mise √† jour avec succ√®s');

    // V√©rifier la structure de la table
    const [columns] = await connection.execute('DESCRIBE colis');
    console.log('üìã Structure de la table colis:');
    columns.forEach(col => {
      console.log(`  - ${col.Field}: ${col.Type} ${col.Null === 'NO' ? 'NOT NULL' : ''}`);
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de la mise √† jour:', error);
    process.exit(1);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå Connexion ferm√©e');
    }
  }
}

// Ex√©cuter le script
updateDatabase(); 